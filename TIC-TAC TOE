using System;
using System.Diagnostics;
using System.Linq;

namespace Tic_Tac_Toe
{
    class Program
    {
        // Making an array to help draw the board
        public static char[] boardLocation = { '0', '1', '2', '3', '4', '5', '6', '7', '8' };

        // By default player 1 is set first
        public static int player = 1;

        // This holds the choice at which position user wants to mark
        public static int choice;

        /* The flag variable checks who has won 
         * if 1 then it's a Win 
         * if -1 then it's a Draw 
         * if 0 then the game is still going  
        */
        public static int flag;

        static void Main(string[] args)
        {
            // Set console title
            Console.Title = "TIC-TAC TOE";

            Console.WriteLine("Welcome to TIC-TAC TOE");
            Console.WriteLine("To play the game choose a number to mark your choice.");
            Console.WriteLine("Enjoy the game.");
            Console.WriteLine("Press any key to continue.");
            Console.ReadKey();
            
            // Run the game
            Game();

            Console.Clear();
            Console.WriteLine("Thank you for playing!");
            Console.ReadKey();
        }

        public static void BoardDraw()
        {
            Console.WriteLine("   |   |   ");
            Console.WriteLine(" {0} | {1} | {2} ", boardLocation[0], boardLocation[1], boardLocation[2]);
            Console.WriteLine("___|___|___");
            Console.WriteLine("   |   |   ");
            Console.WriteLine(" {0} | {1} | {2} ", boardLocation[3], boardLocation[4], boardLocation[5]);
            Console.WriteLine("___|___|___");
            Console.WriteLine("   |   |   ");
            Console.WriteLine(" {0} | {1} | {2} ", boardLocation[6], boardLocation[7], boardLocation[8]);
            Console.WriteLine("   |   |   ");

        }

        public static void Game()
        {
            do
            {
                Console.Clear();
                Console.WriteLine("Player 1: X      Player 2: O");
                Console.WriteLine("\n");
                BoardDraw();
                Console.WriteLine("\n\n");

                // Get players choice
                if (player % 2 == 0)
                    Console.WriteLine("Player 2 turn.");
                else
                    Console.WriteLine("Player 1 turn.");

                Console.Write("Choice: ");
                choice = int.Parse(Console.ReadLine());

                // Check if players choice are valid and mark the X or O
                if (boardLocation[choice] != 'X' && boardLocation[choice] != 'O')
                {
                    if (player % 2 == 0)
                    {
                        boardLocation[choice] = 'O';
                        player++;
                    }
                    else
                    {
                        boardLocation[choice] = 'X';
                        player++;
                    }
                }
                else
                {
                    Console.WriteLine("That place is already token.");
                    Console.WriteLine("Press any key to continue.");
                    Console.ReadKey();
                }

                flag = WinCheck();
            }
            while (flag != 1 && flag != -1);

            Console.Clear();
            BoardDraw();

            // Show Winner
            if (flag == 1)
                Console.WriteLine("Player {0} won", (player % 2) + 1);
            // It's a Draw
            else
                Console.WriteLine("Draw");

            Console.ReadKey();
        }

        public static int WinCheck()
        {
            // Check for horizontal win

            // First row
            if (boardLocation[0] == boardLocation[1] &&
                boardLocation[0] == boardLocation[2] &&
                boardLocation[1] == boardLocation[2])
                return 1;

            // Second row
            else if (boardLocation[3] == boardLocation[4] &&
                boardLocation[4] == boardLocation[5] &&
                boardLocation[3] == boardLocation[5])
                return 1;

            // Third row
            else if (boardLocation[6] == boardLocation[7] &&
                boardLocation[7] == boardLocation[8] &&
                boardLocation[6] == boardLocation[8])
                return 1;

            // Check for Vertical win

            // First row
            if (boardLocation[0] == boardLocation[3] &&
                boardLocation[3] == boardLocation[6] &&
                boardLocation[0] == boardLocation[6])
                return 1;

            // Second row
            else if (boardLocation[1] == boardLocation[4] &&
                boardLocation[4] == boardLocation[7] &&
                boardLocation[1] == boardLocation[7])
                return 1;

            // Third row
            else if (boardLocation[2] == boardLocation[5] &&
                boardLocation[5] == boardLocation[8] &&
                boardLocation[2] == boardLocation[8])
                return 1;

            // Check for Diagonal win

            // First row
            if (boardLocation[0] == boardLocation[4] &&
                boardLocation[4] == boardLocation[8] &&
                boardLocation[0] == boardLocation[8])
                return 1;

            // Second row
            else if (boardLocation[2] == boardLocation[4] &&
                boardLocation[4] == boardLocation[6] &&
                boardLocation[2] == boardLocation[6])
                return 1;

            // Draw condition
            else if (boardLocation[0] != '0' && boardLocation[1] != '1' && boardLocation[2] != '2' &&
                boardLocation[3] != '3' && boardLocation[4] != '4' && boardLocation[5] != '5' &&
                boardLocation[6] != '6' && boardLocation[7] != '7' && boardLocation[8] != '8')
                return -1;

            // The game isn't finished yet
            else
                return 0;

        }
    }
}
